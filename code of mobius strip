!pip install matplotlib-venn

import numpy as np
import matplotlib.pyplot as plt
from scipy.integrate import simpson

class MobiusStrip:
    def __init__(self, R=1.0, w=0.4, n=200):
        """
        Initialize the Mobius Strip.
        R: Radius from center to mid-line
        w: Width of the strip
        n: Resolution (number of points)
        """
        self.R = R
        self.w = w
        self.n = n
        self.u, self.v = np.meshgrid(
            np.linspace(0, 2 * np.pi, n),
            np.linspace(-w / 2, w / 2, n)
        )
        self.x, self.y, self.z = self.compute()

    def compute(self):
        u = self.u
        v = self.v
        x = (self.R + v * np.cos(u / 2)) * np.cos(u)
        y = (self.R + v * np.cos(u / 2)) * np.sin(u)
        z = v * np.sin(u / 2)
        return x, y, z

    def surface(self):
      """
      Approximate surface area using trapezoidal integration.
      """
      du = 2 * np.pi / (self.n - 1)
      dv = self.w / (self.n - 1)

      dxdu = np.gradient(self.x, du, axis=1)
      dxdv = np.gradient(self.x, dv, axis=0)
      dydu = np.gradient(self.y, du, axis=1)
      dydv = np.gradient(self.y, dv, axis=0)
      dzdu = np.gradient(self.z, du, axis=1)
      dzdv = np.gradient(self.z, dv, axis=0)

      crossx = dydu * dzdv - dzdu * dydv
      crossy = dzdu * dxdv - dxdu * dzdv
      crossz = dxdu * dydv - dydu * dxdv

      dA = np.sqrt(crossx**2 + crossy**2 + crossz**2)
      area = np.trapz(np.trapz(dA, dx=dv, axis=0), dx=du)
      return area


    def edge(self):
      u = np.linspace(0, 2 * np.pi, self.n)
      v_edge = self.w / 2
      x_edge = (self.R + v_edge * np.cos(u / 2)) * np.cos(u)
      y_edge = (self.R + v_edge * np.cos(u / 2)) * np.sin(u)
      z_edge = v_edge * np.sin(u / 2)

      dx = np.gradient(x_edge, u)
      dy = np.gradient(y_edge, u)
      dz = np.gradient(z_edge, u)

      ds = np.sqrt(dx**2 + dy**2 + dz**2)
      length = np.trapz(ds, u)
      return length


    def plot(self, save_path=None):
        """
        Plot and optionally save the Möbius strip 3D surface.
        """
        fig = plt.figure(figsize=(10, 6))
        ax = fig.add_subplot(111, projection='3d')
        ax.plot_surface(self.x, self.y, self.z, rstride=4, cstride=4,
                        color='cornflowerblue', edgecolor='k', alpha=0.9)
        ax.set_title("Möbius Strip", fontsize=14)
        ax.set_xlabel("X")
        ax.set_ylabel("Y")
        ax.set_zlabel("Z")
        ax.axis('auto')
        plt.tight_layout()
        if save_path:
            plt.savefig(save_path, dpi=300)
        plt.show()

# Example usage
if __name__ == "__main__":
    mobius = MobiusStrip(R=1.0, w=0.4, n=300)
    area = mobius.surface()
    length = mobius.edge()
    print(f"Approx. Surface Area: {area:.4f}")
    print(f"Approx. Edge Length: {length:.4f}")
    mobius.plot(save_path="mobius_strip.png")



Note: Run the code in google to get a exact output 





